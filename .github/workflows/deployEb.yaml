# .github/workflows/deploy.yml
name: Deploy to EC2

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '16'

        - name: Install dependencies
          run: npm install

        - name: Package application
          run: zip -r app.zip .

        - name: Deploy to EC2
          uses: appleboy/scp-action@v0.1.3
          with:
            host: ${{ secrets.EC2_HOST }}
            username: ${{ secrets.EC2_USER }}
            key: ${{ secrets.EC2_KEY }}
            source: "app.zip"
            target: "~/app.zip"

        - name: SSH to EC2 and deploy
          uses: appleboy/ssh-action@v0.1.6
          with:
            host: ${{ secrets.EC2_HOST }}
            username: ${{ secrets.EC2_USER }}
            key: ${{ secrets.EC2_KEY }}
            script: |
                sudo yum update
                sudo yum install -y unzip 
                sudo rm -rf ~/app
                cd ~/app.zip
                unzip app.zip -d ~/app
                cd ~/app
                sudo npm install
                sudo npm install pm2 -g
                sudo pm2 stop all || true
                sudo pm2 start app.js --name "my-app"
                sudo yum install -y nginx
                sudo systemctl enable nginx
                sudo systemctl restart nginx
                sudo tee /etc/nginx/conf.d/nodeapp.conf > /dev/null <<EOF
                server {
                    listen 80;
                    server_name _;
      
                    location / {
                        proxy_pass http://localhost:3000;
                        proxy_http_version 1.1;
                        proxy_set_header Upgrade \$http_upgrade;
                        proxy_set_header Connection 'upgrade';
                        proxy_set_header Host \$host;
                        proxy_cache_bypass \$http_upgrade;
                    }
                }
                EOF
      
                # Enable and restart NGINX
                sudo systemctl enable nginx
                sudo systemctl restart nginx
